(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[55],{1013:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return p},assets:function(){return c},toc:function(){return d},default:function(){return m}});var a=t(4034),r=t(9973),i=(t(7294),t(3905)),s=["components"],l={slug:"console-log-arrays",title:"console.log([`Arrays`])",author:"Amir.H Ebrahimi",author_title:"Frontend developer",author_url:"https://github.com/realamirhe",author_image_url:"https://avatars.githubusercontent.com/u/23579958?s=48&v=4",tags:["tutorial","javascript","arrays"]},o=void 0,p={permalink:"/blog/console-log-arrays",editUrl:"https://github.com/ahimico/ahimico.github.io/edit/master/website/blog/2021-10-26-console-log-arrays.md",source:"@site/blog/2021-10-26-console-log-arrays.md",title:"console.log([`Arrays`])",description:"Who ever you go there is need for holding these array operation piece together",date:"2021-10-26T00:00:00.000Z",formattedDate:"October 26, 2021",tags:[{label:"tutorial",permalink:"/blog/tags/tutorial"},{label:"javascript",permalink:"/blog/tags/javascript"},{label:"arrays",permalink:"/blog/tags/arrays"}],readingTime:3.835,truncated:!0,authors:[{name:"Amir.H Ebrahimi",title:"Frontend developer",url:"https://github.com/realamirhe",imageURL:"https://avatars.githubusercontent.com/u/23579958?s=48&v=4"}],nextItem:{title:"Aptor Is All You Need",permalink:"/blog/aptor-is-all-you-need"}},c={authorsImageUrls:[void 0]},d=[{value:"Indexing",id:"indexing",children:[],level:2},{value:"Adding (appending) items",id:"adding-appending-items",children:[],level:2},{value:"Creating array",id:"creating-array",children:[],level:2},{value:"Iteration",id:"iteration",children:[],level:2},{value:"Inclusion",id:"inclusion",children:[{value:"Operators",id:"operators",children:[],level:3}],level:2}],u={toc:d};function m(e){var n=e.components,t=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Who ever you go there is need for holding these array operation piece together"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const numbers: number[] = [0, 1, 2]\nconst alphabet: string[] = ['a', 'b', 'c']\n")),(0,i.kt)("h2",{id:"indexing"},"Indexing"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"numbers.indexOf(2) // 2\nnumbers.indexOf(10) // -1\nnumbers[5] // undefined\nnumbers[-1] // undefined\nnumbers[Infinity] // undefined\nnumbers['1'] // 1\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Bonus tips (negative index)"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"numbers.at(-1) // 2, (builtin at method)\n\nconst coolNumbers = new Proxy(numbers, {\n  get(target, props) {\n    const index: number = +(<string>props)\n    if (index < 0) return Reflect.get(target, index + target.length)\n    return Reflect.get(target, props)\n  },\n})\ncoolNumbers[-1] // 2\n")),(0,i.kt)("h2",{id:"adding-appending-items"},"Adding (appending) items"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"/* IMMUTABILITY */\nnumbers.concat([3, 4]) // [ 0, 1, 2, 3, 4 ]\nnumbers // [ 0, 1, 2]\n\n/* INPLACE CHANGES */\nnumbers.push(3) // numbers -> [0, 1, 2, 3]\nnumbers.unshift(-2) //  numbers -> [-2, 0, 1, 2, 3]\nnumbers.splice(1, 0, -1) // numbers -> [-2, -1, 0, 1, 2, 3]\nnumbers.splice(0, 0, ...[-6, -4, -3])\nnumbers // [-6, -4, -3, -2, -1,  0,  1,  2,  3]\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Replacing item")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"numbers.splice(0, 1, -5) // numbers -> [-5, -4, -3, -2, -1,  0,  1,  2,  3]\nnumbers.splice(500, 100, 4) // numbers -> [-5, -4, -3, -2, -1,  0,  1,  2,  3, 5]\nnumbers[9] = 4 // numbers -> [-5, -4, -3, -2, -1,  0,  1,  2,  3, 4]\nnumbers[(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4)]\n")),(0,i.kt)("h2",{id:"creating-array"},"Creating array"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"new Array(5) // [ <5 empty items> ]\nArray.from({ length: 5 }) // [ undefined, undefined, undefined, undefined, undefined ]\nArray.from('12345', _ => undefined) // [ undefined, undefined, undefined, undefined, undefined ]\nArray.from(document.querySelectorAll('img'), img => img.src)\nArray.of(1, 2, 3, 4, 5) // [ 1, 2, 3, 4, 5 ]\nArray(5) // [ <5 empty items> ]\nArray.from({ length: 5 }, (_, i) => i) // [ 0, 1, 2, 3, 4 ]\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Bonus tips")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Manipulating array length is possible and it necessary in a case you want to implement something like ",(0,i.kt)("a",{parentName:"p",href:"https://gist.github.com/realamirhe/afa63f32050d814ff9bc6f944e06fc48#file-useundoredo-ts"},"undo-redo feature"),", or stack base operation e.g. saving browser router history"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"alphabet.length = 5\nalphabet // [ 'a', 'b', 'c', <2 empty items> ] length is 5\nalphabet[7] = 'e'\nalphabet // [ 'a', 'b', 'c', <4 empty items>, 'e' ] length is 8\nalphabet.length = 3\nalphabet // [ 'a', 'b', 'c' ] length is 3\n")),(0,i.kt)("h2",{id:"iteration"},"Iteration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"alphabet.entries() // Iterator over [[0,'a'], [1, 'b'], [2, 'c']]\nfor (const [index, element] of alphabet.entries()) {}\nalphabet.keys() // Iterator over [0, 1, 2]\nfor (const index in alphabet) {}\nalphabet.values() // Iterator over [ 'a', 'b', 'c' ]\nfor (const value of alphabet) {}\n")),(0,i.kt)("h2",{id:"inclusion"},"Inclusion"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"alphabet.includes('c') // true\nalphabet.includes('c', 1) // true, from index 1\nalphabet.includes('c', -2) // true, from index (length - 2)\nalphabet.find(item => item.charCodeAt(0) > 'b'.charCodeAt(0)) // c\nalphabet.findIndex(item => item.charCodeAt(0) > 'b'.charCodeAt(0)) // 2\nalphabet.lastIndexOf('c') // 2\nalphabet.indexOf('c') // 2\nalphabet.indexOf('d') // -1\n")),(0,i.kt)("h3",{id:"operators"},"Operators"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"alphabet.every(item => item.charCodeAt(0) < 'c'.charCodeAt(0)) // false\nalphabet.some(item => item.charCodeAt(0) < 'c'.charCodeAt(0)) // true\n\n// **flat** ES2019\nconst nested = [0, [1], [[2]], [[[3]]], [[[[4], 3], 2], 1]]\nnested.flat() // [ 0, 1, [ 2 ], [ [ 3 ] ], [ [ [4], 3 ], 2 ], 1 ], default level  1\nnested.flat(3) // [0, 1, 2, 3, [ 4 ], 3, 2, 1]\nnested.flat(Infinity) // [0, 1, 2, 3, 4 , 3, 2, 1]\n\n// **joining**\nalphabet.join(',') // a,b,c\n// @ts-ignore\nalphabet.join`,` // a,b,c\nalphabet.toString() // a,b,c\n\n// **reducing**\nalphabet.reduce((acc, chr) => acc + ', ' + chr, '') // , a, b, c\nalphabet.reduceRight((acc, chr) => acc + ', ' + chr, '') // , c, b, a\nalphabet.reverse() // alphabet -> [ 'c', 'b', 'a' ]\nalphabet // [ 'c', 'b', 'a' ]\n\n// **sorting**\nalphabet.sort() // shuffle alphabet, e.g. alphabet -> [ 'b', 'a', 'c' ]\nalphabet.sort(() => Math.random() - 0.5) // alphabet -> [ 'a', 'b', 'c' ]\nalphabet // [ 'a', 'b', 'c' ]\n\n// **subset**\nalphabet.slice(1) // ['b', 'c']\nalphabet.slice(0, 2) // [ 'a', 'b' ]\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Bonus tips")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"For mapping over an array it must have value, it can be undefined or null or any thing, but it can not be empty ."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=pythonic-range.ts",title:"pythonic-range.ts"},"const range = (start: number, stop?: number, step?: number) => {\n  if (step === undefined) step = 1\n  if (stop === undefined) {\n    stop = start\n    start = 0\n  }\n\n  return Array.from(\n    { length: (stop - start) / step + 1 },\n    (_, i) => start + i * step!,\n  )\n}\n\nfor (let i in range(10)) console.log(i)\n")))}m.isMDXComponent=!0}}]);