(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[803],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),m=s(n),f=a,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||o;return n?r.createElement(d,i(i({ref:t},l),{},{components:n})):r.createElement(d,i({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3522:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return l},default:function(){return m}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],p={id:"tips-&-tricks",title:"Tips & Tricks",sidebar_position:4},c=void 0,s={unversionedId:"react-aptor/tips-&-tricks",id:"react-aptor/tips-&-tricks",isDocsHomePage:!1,title:"Tips & Tricks",description:"Using of optional chaining",source:"@site/docs/react-aptor/tips-and-tricks.mdx",sourceDirName:"react-aptor",slug:"/react-aptor/tips-&-tricks",permalink:"/docs/react-aptor/tips-&-tricks",editUrl:"https://github.com/ahimico/ahimico.github.io/edit/master/website/docs/react-aptor/tips-and-tricks.mdx",version:"current",sidebarPosition:4,frontMatter:{id:"tips-&-tricks",title:"Tips & Tricks",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"API Reference",permalink:"/docs/react-aptor/api-reference"}},l=[{value:"Using of optional chaining",id:"using-of-optional-chaining",children:[]},{value:"Better naming",id:"better-naming",children:[]},{value:"Can I remove if check in handlers",id:"can-i-remove-if-check-in-handlers",children:[]},{value:"Micro api instructions",id:"micro-api-instructions",children:[]},{value:"The <code>this</code> problem in API object",id:"the-this-problem-in-api-object",children:[]},{value:"How to get API-Object type",id:"how-to-get-api-object-type",children:[]},{value:"How to make a custom react integration package using react-aptor",id:"how-to-make-a-custom-react-integration-package-using-react-aptor",children:[]}],u={toc:l};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"using-of-optional-chaining"},"Using of optional chaining"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"function call can be much more readable with ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining"},"optional chaining")," & related ",(0,o.kt)("a",{parentName:"p",href:"https://babeljs.io/docs/en/babel-plugin-proposal-optional-chaining"},"babel plugin"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const apiKeyHandler = () => ref.current?.api_key()\n")),(0,o.kt)("h3",{id:"better-naming"},"Better naming"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"In case you need ",(0,o.kt)("inlineCode",{parentName:"p"},"ref.current")," more than one time, it is a good idea to rename it at the first place")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const apiKeyHandler = () => {\n  const { current: api } = ref // store ref.current in `api`\n  if (api) {\n    api.api_key()\n  }\n}\n")),(0,o.kt)("h3",{id:"can-i-remove-if-check-in-handlers"},"Can I remove if check in handlers"),(0,o.kt)("p",null,"Cause the default value for ref can be undefined (in ",(0,o.kt)("strong",{parentName:"p"},"createRef"),") and null (in ",(0,o.kt)("strong",{parentName:"p"},"useRef"),") Typescript will complain about possibility for not-existence of apis. ",(0,o.kt)("a",{parentName:"p",href:"https://fettblog.eu/typescript-react/hooks/#useref"},"see more"),".\nIn normal world react will bind your API to given ref after the Connector mount"),(0,o.kt)("p",null,"If you're using ref in useEffect or somewhere which is guaranteed to have the ref bounded to values, you can return proxy object in your getAPI function to bind all api functions simultaneously."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"export default function getAPI(thirdParty, params) {\n  if (!thirdParty)\n    return () =>\n      new Proxy(\n        {},\n        {\n          get: (_, prop) => {\n            // Possible to mock differently for different props\n            return noop\n          },\n        },\n      )\n\n  return () => ({\n    api_key() {\n      // third-party is defined here for sure :)\n      console.log(thirdParty)\n    },\n  })\n}\n")),(0,o.kt)("h3",{id:"micro-api-instructions"},"Micro api instructions"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"You can access all of you apis via ",(0,o.kt)("inlineCode",{parentName:"p"},"this")," keyword")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"export default function getAPI(sound, params) {\n  return () => ({\n    _state() {\n      return sound.getState()\n    },\n\n    play() {\n      if (this._state() === 'LOADED') sound.play()\n    },\n  })\n}\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"It's better to start name of this internal functions with ",(0,o.kt)("inlineCode",{parentName:"p"},"_"))),(0,o.kt)("h3",{id:"the-this-problem-in-api-object"},"The ",(0,o.kt)("inlineCode",{parentName:"h3"},"this")," problem in API object"),(0,o.kt)("p",null,"In a case you see this keyword usage in third-party API\nyou must specifying ",(0,o.kt)("inlineCode",{parentName:"p"},"this")," something other than returned API object.\nThe following examples is for howler integration using react-aptor:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  // \u274c It doesn't work\n  state: howler.state,\n\n  // \ud83c\udd97 this is Okay\n  state: howler.state.bind(howler),\n  // \ud83c\udd97 this is also Okay\n  state: () => howler.state(),\n  // \ud83c\udd97 this is also Okay, too\n  state() {\n    return howler.state();\n  }\n}\n")),(0,o.kt)("h3",{id:"how-to-get-api-object-type"},"How to get API-Object type"),(0,o.kt)("p",null,"You can use something like the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export type APITypes = ReturnType<ReturnType<typeof getAPI>>\n")),(0,o.kt)("h3",{id:"how-to-make-a-custom-react-integration-package-using-react-aptor"},"How to make a custom react integration package using react-aptor"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Name you package ",(0,o.kt)("strong",{parentName:"li"},"raptor-something")," :)"),(0,o.kt)("li",{parentName:"ol"},"Use minimum possible configuration for your api"),(0,o.kt)("li",{parentName:"ol"},"Interact to props change in your component using ",(0,o.kt)("inlineCode",{parentName:"li"},"useEffect")," and proper ",(0,o.kt)("inlineCode",{parentName:"li"},"deps")," array"),(0,o.kt)("li",{parentName:"ol"},"Bind another ref to you Connector using fork-ref idea, for other possible usage")),(0,o.kt)("p",null,"See an in-action full example of raptor-howler in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/amirHossein-Ebrahimi/raptor-howler/tree/master/example"},"raptor-howler/examples")))}m.isMDXComponent=!0}}]);